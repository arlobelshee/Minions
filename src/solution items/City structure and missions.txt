The world consists of Cities & Regions (computers). Fools operate only within one City. Mail may be sent to DeadDrops regardless of City. Fools subscribe to DeadDrops.

Initialization happens in 3 phases:

1. Mission definition.
2. Construction of one Fool.
3. Execution.

Mission definition results in creating MissionDescriptions and DropMaps. A MissionDescription is enough to decide when to create a Fool and tell it what to do. A DropMap is enough when to create a DeadDrop and dell it what messages it will pass. Both kinds of descriptions can be used at any time (and even multiple times) to create their respective objects. The descriptions are wired together so that the Fools can be told about Drops when they are eventually created.

The Overlord defines all MissionDescriptions and DropMaps during mission definition. A MissionDescription is created by asking the FoolSupplyHouse in that mission's City. A DropMap is created by asking the BuildingCommission in the City. When the overlord is finished defining missions, he watches_the_city_dance_for_his_amusement. At this point, the various components lock down the messages that will be sent and the conditions under shich Fools will be created. No more MissionDescriptions or DropMaps can be created in that City.

In message delivery, no guarantee exists about when Fools will spawn. That is what announce and wait is for. Message sends will be processed bby the sending Fool. Subscribed Fools will be held iin a ConcurrentBag; this gives snapshot semantics.

Once init has happened, it is no longer possible to add new message types. It is possible to add new subscribers for a known type. Mission definitions are static; no Fool will subscribe or unsubscribe except at its lifetime boundaries.
